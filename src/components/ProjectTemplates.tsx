import { motion } from "framer-motion";
import { Card } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { 
  ExternalLink, 
  Briefcase, 
  BookOpen, 
  Lightbulb, 
  Target, 
  Users, 
  TrendingUp,
  FileText,
  Globe,
  Zap
} from "lucide-react";

export function ProjectTemplates() {
  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        delayChildren: 0.2,
        staggerChildren: 0.1
      }
    }
  };

  const itemVariants = {
    hidden: { y: 60, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
      transition: {
        type: "spring" as const,
        stiffness: 100,
        damping: 10
      }
    }
  };

  const templates = [
    {
      title: "Market Research Analysis",
      description: "Comprehensive market analysis for a SaaS startup, including competitor research, target audience insights, and growth opportunities.",
      category: "Business Strategy",
      icon: TrendingUp,
      tags: ["Market Analysis", "Competitive Intelligence", "Growth Strategy"],
      author: "Sarah M.",
      timeCreated: "2 hours",
      bgGradient: "from-blue-500/10 to-cyan-500/10"
    },
    {
      title: "Academic Literature Review",
      description: "In-depth literature review on AI ethics in healthcare, covering recent publications, key findings, and research gaps.",
      category: "Research",
      icon: BookOpen,
      tags: ["AI Ethics", "Healthcare", "Literature Review"],
      author: "Dr. Chen",
      timeCreated: "45 minutes",
      bgGradient: "from-green-500/10 to-emerald-500/10"
    },
    {
      title: "Product Launch Strategy",
      description: "Complete go-to-market strategy for a mobile app launch, including positioning, messaging, and channel strategy.",
      category: "Product Management",
      icon: Target,
      tags: ["GTM Strategy", "Product Launch", "Marketing"],
      author: "Marcus K.",
      timeCreated: "1.5 hours",
      bgGradient: "from-purple-500/10 to-pink-500/10"
    },
    {
      title: "Innovation Workshop Context",
      description: "Background research and context for a corporate innovation workshop, including industry trends and best practices.",
      category: "Innovation",
      icon: Lightbulb,
      tags: ["Innovation", "Workshop", "Industry Trends"],
      author: "Elena R.",
      timeCreated: "1 hour",
      bgGradient: "from-orange-500/10 to-red-500/10"
    },
    {
      title: "Investment Thesis Research",
      description: "Detailed investment analysis for renewable energy sector, including market dynamics, key players, and future outlook.",
      category: "Finance",
      icon: Briefcase,
      tags: ["Investment", "Renewable Energy", "Market Analysis"],
      author: "David L.",
      timeCreated: "3 hours",
      bgGradient: "from-teal-500/10 to-blue-500/10"
    },
    {
      title: "Global Expansion Context",
      description: "Market entry strategy and cultural context for expanding into European markets, including regulatory landscape.",
      category: "International Business",
      icon: Globe,
      tags: ["Global Expansion", "Market Entry", "Regulatory"],
      author: "Lisa W.",
      timeCreated: "2.5 hours",
      bgGradient: "from-indigo-500/10 to-purple-500/10"
    }
  ];

  return (
    <section className="py-24 bg-background relative overflow-hidden">
      {/* Background decoration */}
      <div className="absolute inset-0 bg-gradient-to-br from-accent/5 via-transparent to-primary/5" />
      
      <div className="container mx-auto px-4 relative z-10">
        <motion.div
          variants={containerVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, amount: 0.1 }}
          className="text-center mb-16"
        >
          <motion.div variants={itemVariants} className="space-y-4">
            <div className="flex justify-center">
              <div className="bg-accent/10 border border-accent/20 rounded-full px-4 py-2 backdrop-blur-sm">
                <span className="text-sm text-accent font-medium">Project Templates</span>
              </div>
            </div>
            <h2 className="text-4xl md:text-5xl font-bold text-foreground">
              See What Others Have Created
            </h2>
            <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
              Explore real examples of comprehensive contexts generated by our users across various industries
            </p>
          </motion.div>
        </motion.div>

        <motion.div
          variants={containerVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, amount: 0.1 }}
          className="grid md:grid-cols-2 lg:grid-cols-3 gap-8"
        >
          {templates.map((template, index) => (
            <motion.div
              key={template.title}
              variants={itemVariants}
              whileHover={{ 
                scale: 1.02,
                transition: { type: "spring", stiffness: 300, damping: 10 }
              }}
              className="group"
            >
              <Card className="p-6 bg-gradient-card border-border/50 hover:shadow-glow transition-all duration-300 h-full">
                <div className="space-y-4">
                  {/* Header */}
                  <div className="flex items-start justify-between">
                    <motion.div 
                      className={`w-12 h-12 bg-gradient-to-br ${template.bgGradient} rounded-lg flex items-center justify-center`}
                      whileHover={{ rotate: 360 }}
                      transition={{ duration: 0.6 }}
                    >
                      <template.icon className="w-6 h-6 text-foreground" />
                    </motion.div>
                    <Badge variant="secondary" className="text-xs">
                      {template.category}
                    </Badge>
                  </div>

                  {/* Content */}
                  <div className="space-y-3">
                    <h3 className="text-lg font-semibold text-foreground group-hover:text-primary transition-colors">
                      {template.title}
                    </h3>
                    <p className="text-muted-foreground text-sm leading-relaxed">
                      {template.description}
                    </p>
                  </div>

                  {/* Tags */}
                  <div className="flex flex-wrap gap-2">
                    {template.tags.map((tag, tagIndex) => (
                      <motion.div
                        key={tag}
                        initial={{ scale: 0 }}
                        whileInView={{ scale: 1 }}
                        transition={{ delay: index * 0.1 + tagIndex * 0.05 }}
                      >
                        <Badge variant="outline" className="text-xs">
                          {tag}
                        </Badge>
                      </motion.div>
                    ))}
                  </div>

                  {/* Footer */}
                  <div className="flex items-center justify-between pt-4 border-t border-border/30">
                    <div className="flex items-center space-x-2">
                      <Users className="w-4 h-4 text-muted-foreground" />
                      <span className="text-sm text-muted-foreground">{template.author}</span>
                      <span className="text-xs text-muted-foreground">â€¢</span>
                      <span className="text-xs text-muted-foreground">{template.timeCreated}</span>
                    </div>
                    <motion.div
                      whileHover={{ scale: 1.1 }}
                      whileTap={{ scale: 0.95 }}
                    >
                      <Button variant="ghost" size="sm" className="p-2">
                        <ExternalLink className="w-4 h-4" />
                      </Button>
                    </motion.div>
                  </div>
                </div>
              </Card>
            </motion.div>
          ))}
        </motion.div>

        {/* CTA Section */}
        <motion.div
          variants={itemVariants}
          initial="hidden"
          whileInView="visible"
          viewport={{ once: true, amount: 0.1 }}
          className="text-center mt-16"
        >
          <motion.div
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.95 }}
          >
            <Button size="xl" variant="gradient" className="min-w-[200px] group">
              <Zap className="w-4 h-4 mr-2" />
              Create Your Own Context
              <motion.div
                animate={{ x: [0, 5, 0] }}
                transition={{ duration: 1.5, repeat: Infinity }}
              >
                <ExternalLink className="w-4 h-4 ml-2" />
              </motion.div>
            </Button>
          </motion.div>
        </motion.div>
      </div>
    </section>
  );
}